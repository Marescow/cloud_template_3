{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { RestServiceFactory } from '@smart/utils';\r\nimport { CONTEXT_CATALOG, CONTEXT_CATALOG_VERSION, MEDIA_PATH, MEDIAS_PATH } from '../../utils/smarteditconstants';\r\nimport { IMediaService } from '../interfaces/IMediaService';\r\n/** Service to deal with media related CRUD operations. */\r\nlet /* @ngInject */ MediaService = class /* @ngInject */ MediaService extends IMediaService {\r\n    constructor(restServiceFactory) {\r\n        super();\r\n        this.restServiceFactory = restServiceFactory;\r\n    }\r\n    /**\r\n     * Fetches paged search results by making a REST call to the appropriate item endpoint.\r\n     *\r\n     * @param mask for filtering the search.\r\n     * @param pageSize number of items in the page.\r\n     * @param currentPage current page number.\r\n     */\r\n    getPage(mask, pageSize, currentPage, mimeType) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const contextParams = {\r\n                catalogId: CONTEXT_CATALOG,\r\n                catalogVersion: CONTEXT_CATALOG_VERSION\r\n            };\r\n            const subParams = this.contextParamsToCommaSeparated(contextParams);\r\n            const payload = {\r\n                mask,\r\n                params: subParams,\r\n                pageSize,\r\n                currentPage,\r\n                mimeType\r\n            };\r\n            const response = yield this.restServiceFactory.get(MEDIAS_PATH).get(payload);\r\n            const page = {\r\n                results: [],\r\n                pagination: response.pagination\r\n            };\r\n            page.results = response.media.map((media) => this.mediaDTOtoMedia(media));\r\n            return page;\r\n        });\r\n    }\r\n    /**\r\n     * This method fetches a Media by its UUID.\r\n     * @param uuid uuid of a media (contains catalog information).\r\n     */\r\n    getMedia(uuid) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // identifier is added to URI and not getByid argument because it contains slashes\r\n            const url = `${MEDIA_PATH}/${uuid}`;\r\n            const media = yield this.restServiceFactory.get(url).get();\r\n            return this.mediaDTOtoMedia(media);\r\n        });\r\n    }\r\n    /**\r\n     * Returns comma separated params that will be attached to payload.\r\n     *\r\n     * E.g. \"catalogId:CURRENT_CONTEXT_CATALOG,catalogVersion:CURRENT_CONTEXT_CATALOG_VERSION\"\r\n     */\r\n    contextParamsToCommaSeparated(params) {\r\n        return Object.keys(params)\r\n            .reduce((accumulator, next) => {\r\n            accumulator += `,${next}:${params[next]}`;\r\n            return accumulator;\r\n        }, '')\r\n            .substring(1);\r\n    }\r\n    mediaDTOtoMedia(mediaDTO) {\r\n        const needlessPropertiesOfMediaDTO = ['catalogId', 'catalogVersion', 'uuid'];\r\n        const media = {};\r\n        Object.getOwnPropertyNames(mediaDTO)\r\n            .filter((propertyName) => needlessPropertiesOfMediaDTO.indexOf(propertyName) === -1)\r\n            .forEach((propertyName) => (media[propertyName] = mediaDTO[propertyName]));\r\n        media.id = mediaDTO.uuid;\r\n        return media;\r\n    }\r\n};\r\n/* @ngInject */ MediaService = __decorate([\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [RestServiceFactory])\r\n], /* @ngInject */ MediaService);\r\nexport { /* @ngInject */ MediaService };\r\n//# sourceMappingURL=MediaService.js.map","references":["/home/acxias/Documents/CX/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4_zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/acxias/Documents/CX/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/acxias/Documents/CX/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/smarteditconstants.ts","/home/acxias/Documents/CX/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/interfaces/IMediaService.ts"],"map":"{\"version\":3,\"file\":\"MediaService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/media/MediaService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,kBAAkB,EAAQ,MAAM,cAAc,CAAC;AACxD,OAAO,EACH,eAAe,EACf,uBAAuB,EACvB,UAAU,EACV,WAAW,EACd,MAAM,gCAAgC,CAAC;AACxC,OAAO,EACH,aAAa,EAKhB,MAAM,6BAA6B,CAAC;AAErC,0DAA0D;AAE1D,mCAAA,kCAA0B,SAAQ,aAAa;IAC3C,YAAoB,kBAAsC;QACtD,KAAK,EAAE,CAAC;QADQ,uBAAkB,GAAlB,kBAAkB,CAAoB;IAE1D,CAAC;IAED;;;;;;OAMG;IACU,OAAO,CAChB,IAAY,EACZ,QAAgB,EAChB,WAAmB,EACnB,QAAgB;;YAEhB,MAAM,aAAa,GAAkB;gBACjC,SAAS,EAAE,eAAe;gBAC1B,cAAc,EAAE,uBAAuB;aAC1C,CAAC;YAEF,MAAM,SAAS,GAAG,IAAI,CAAC,6BAA6B,CAAC,aAAa,CAAC,CAAC;YAEpE,MAAM,OAAO,GAAG;gBACZ,IAAI;gBACJ,MAAM,EAAE,SAAS;gBACjB,QAAQ;gBACR,WAAW;gBACX,QAAQ;aACX,CAAC;YACF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAY,WAAW,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAExF,MAAM,IAAI,GAAgB;gBACtB,OAAO,EAAE,EAAE;gBACX,UAAU,EAAE,QAAQ,CAAC,UAAU;aAClC,CAAC;YACF,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;YAE1E,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;IAED;;;OAGG;IACU,QAAQ,CAAC,IAAY;;YAC9B,kFAAkF;YAClF,MAAM,GAAG,GAAG,GAAG,UAAU,IAAI,IAAI,EAAE,CAAC;YACpC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAW,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YAErE,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC;KAAA;IAED;;;;OAIG;IACK,6BAA6B,CAAC,MAAqB;QACvD,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;aACrB,MAAM,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE;YAC1B,WAAW,IAAI,IAAI,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;YAC1C,OAAO,WAAW,CAAC;QACvB,CAAC,EAAE,EAAE,CAAC;aACL,SAAS,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAEO,eAAe,CAAC,QAAkB;QACtC,MAAM,4BAA4B,GAAG,CAAC,WAAW,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAC;QAC7E,MAAM,KAAK,GAAQ,EAAE,CAAC;QACtB,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC;aAC/B,MAAM,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,4BAA4B,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;aACnF,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAC/E,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC;QACzB,OAAO,KAAc,CAAC;IAC1B,CAAC;CACJ,CAAA;AA9ED;IADC,UAAU,EAAE;qCAE+B,kBAAkB;gCA6E7D\"}","dts":{"name":"/home/acxias/Documents/CX/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/media/MediaService.d.ts","writeByteOrderMark":false,"text":"import { RestServiceFactory, Page } from '@smart/utils';\r\nimport { IMediaService, Media } from '../interfaces/IMediaService';\r\n/** Service to deal with media related CRUD operations. */\r\nexport declare class MediaService extends IMediaService {\r\n    private restServiceFactory;\r\n    constructor(restServiceFactory: RestServiceFactory);\r\n    /**\r\n     * Fetches paged search results by making a REST call to the appropriate item endpoint.\r\n     *\r\n     * @param mask for filtering the search.\r\n     * @param pageSize number of items in the page.\r\n     * @param currentPage current page number.\r\n     */\r\n    getPage(mask: string, pageSize: number, currentPage: number, mimeType: string): Promise<Page<Media>>;\r\n    /**\r\n     * This method fetches a Media by its UUID.\r\n     * @param uuid uuid of a media (contains catalog information).\r\n     */\r\n    getMedia(uuid: string): Promise<Media>;\r\n    /**\r\n     * Returns comma separated params that will be attached to payload.\r\n     *\r\n     * E.g. \"catalogId:CURRENT_CONTEXT_CATALOG,catalogVersion:CURRENT_CONTEXT_CATALOG_VERSION\"\r\n     */\r\n    private contextParamsToCommaSeparated;\r\n    private mediaDTOtoMedia;\r\n}\r\n"}}
