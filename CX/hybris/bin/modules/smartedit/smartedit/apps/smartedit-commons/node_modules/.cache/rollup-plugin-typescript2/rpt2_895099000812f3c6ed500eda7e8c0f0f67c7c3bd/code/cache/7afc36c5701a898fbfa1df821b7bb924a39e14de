{"code":"/**\r\n * The IMediaToUpload provides abstract class to upload media content.\r\n */\r\nexport class IMediaToUpload {\r\n    /**\r\n     * Uploads the media to the catalog.\r\n     *\r\n     * @returns Promise that resolves with the media object if request is successful.\r\n     * If the request fails, it resolves with errors from the backend.\r\n     */\r\n    uploadMedia(media) {\r\n        return null;\r\n    }\r\n}\r\n//# sourceMappingURL=IMediaToUpload.js.map","references":[],"map":"{\"version\":3,\"file\":\"IMediaToUpload.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/interfaces/IMediaToUpload.ts\"],\"names\":[],\"mappings\":\"AAkCA;;GAEG;AACH,MAAM,OAAgB,cAAc;IAChC;;;;;OAKG;IACH,WAAW,CAAC,KAAoB;QAC5B,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ\"}","dts":{"name":"/home/acxias/Documents/CX/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/interfaces/IMediaToUpload.d.ts","writeByteOrderMark":false,"text":"export interface ICMSMedia {\r\n    altText: string;\r\n    catalogId: string;\r\n    catalogVersion: string;\r\n    code: string;\r\n    description: string;\r\n    downloadUrl: string;\r\n    mime: string;\r\n    url: string;\r\n    uuid: string;\r\n}\r\nexport interface MediaToUpload {\r\n    /**\r\n     * The {@link https://developer.mozilla.org/en/docs/Web/API/File File} object to be uploaded.\r\n     */\r\n    file?: File;\r\n    /** An unique code identifier for the media. (Shall either have file or url)*/\r\n    url?: string;\r\n    /** An url representing media path from external resources. (Shall either have file or url)*/\r\n    code: string;\r\n    /** A description of the media. */\r\n    description: string;\r\n    /** An alternate text to be shown for the media. */\r\n    altText: string;\r\n    /** The specific folder that media will be upload to. */\r\n    folder: string;\r\n    /** Extendable fields */\r\n    [index: string]: string | File;\r\n}\r\n/**\r\n * The IMediaToUpload provides abstract class to upload media content.\r\n */\r\nexport declare abstract class IMediaToUpload {\r\n    /**\r\n     * Uploads the media to the catalog.\r\n     *\r\n     * @returns Promise that resolves with the media object if request is successful.\r\n     * If the request fails, it resolves with errors from the backend.\r\n     */\r\n    uploadMedia(media: MediaToUpload): Promise<ICMSMedia>;\r\n}\r\n"}}
