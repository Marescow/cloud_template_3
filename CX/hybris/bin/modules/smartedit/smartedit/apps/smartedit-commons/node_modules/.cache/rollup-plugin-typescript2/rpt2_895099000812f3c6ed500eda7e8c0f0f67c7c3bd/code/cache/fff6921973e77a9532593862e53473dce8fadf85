{"code":"/**\r\n * The IMediaService provides abstract class to retrieve media content.\r\n */\r\nexport class IMediaService {\r\n    /**\r\n     * Fetches paged search results by making a REST call to the appropriate item endpoint.\r\n     *\r\n     * @param mask for filtering the search.\r\n     * @param pageSize number of items in the page.\r\n     * @param currentPage current page number.\r\n     */\r\n    getPage(mask, pageSize, currentPage, mimeType) {\r\n        return null;\r\n    }\r\n    /**\r\n     * This method fetches a Media by its UUID.\r\n     * @param uuid uuid of a media (contains catalog information).\r\n     */\r\n    getMedia(uuid) {\r\n        return null;\r\n    }\r\n}\r\n//# sourceMappingURL=IMediaService.js.map","references":["/home/acxias/Documents/CX/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"IMediaService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/interfaces/IMediaService.ts\"],\"names\":[],\"mappings\":\"AAuCA;;GAEG;AACH,MAAM,OAAgB,aAAa;IAC/B;;;;;;OAMG;IACI,OAAO,CACV,IAAY,EACZ,QAAgB,EAChB,WAAmB,EACnB,QAAgB;QAEhB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;OAGG;IACI,QAAQ,CAAC,IAAY;QACxB,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ\"}","dts":{"name":"/home/acxias/Documents/CX/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/interfaces/IMediaService.d.ts","writeByteOrderMark":false,"text":"import { Page } from '@smart/utils';\r\nexport interface Media {\r\n    id: string;\r\n    code: string;\r\n    description: string;\r\n    altText: string;\r\n    url: string;\r\n    downloadUrl: string;\r\n    mime: string;\r\n    [index: string]: string;\r\n}\r\nexport interface MediaDTO {\r\n    altText: string;\r\n    catalogId: string;\r\n    catalogVersion: string;\r\n    code: string;\r\n    description: string;\r\n    downloadUrl: string;\r\n    mime: string;\r\n    url: string;\r\n    uuid: string;\r\n    [index: string]: string;\r\n}\r\nexport interface ContextParams {\r\n    catalogId: string;\r\n    catalogVersion: string;\r\n    code?: string;\r\n}\r\nexport interface MediaPage extends Page<Media> {\r\n    media: MediaDTO[];\r\n}\r\n/**\r\n * The IMediaService provides abstract class to retrieve media content.\r\n */\r\nexport declare abstract class IMediaService {\r\n    /**\r\n     * Fetches paged search results by making a REST call to the appropriate item endpoint.\r\n     *\r\n     * @param mask for filtering the search.\r\n     * @param pageSize number of items in the page.\r\n     * @param currentPage current page number.\r\n     */\r\n    getPage(mask: string, pageSize: number, currentPage: number, mimeType: string): Promise<Page<Media>>;\r\n    /**\r\n     * This method fetches a Media by its UUID.\r\n     * @param uuid uuid of a media (contains catalog information).\r\n     */\r\n    getMedia(uuid: string): Promise<Media>;\r\n}\r\n"}}
